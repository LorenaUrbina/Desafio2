Parameters:
  LambdaS3Bucket:
    Type: String
    Description: "S3 bucket where the Lambda function code is stored"

Resources:
  MyLambdaFunction:
    Type: 'AWS::Lambda::Function'
    Properties:
      Handler: 'lambda_function.lambda_handler'
      Role: 'arn:aws:iam::992382381506:role/lambda-deployment-stack-LambdaExecutionRole-UFY598B3HBEK'
      Code:
        S3Bucket: !Ref LambdaS3Bucket
        S3Key: 'lambda_function.zip'
      Runtime: 'python3.8'

  ApiGateway:
    Type: 'AWS::ApiGateway::RestApi'
    Properties:
      Name: 'Lambda API'

  ApiResource:
    Type: 'AWS::ApiGateway::Resource'
    Properties:
      ParentId: !GetAtt ApiGateway.RootResourceId
      PathPart: 'resource'
      RestApiId: !Ref ApiGateway

  ApiMethod:
    Type: 'AWS::ApiGateway::Method'
    Properties:
      AuthorizationType: 'NONE'
      HttpMethod: 'GET'
      ResourceId: !Ref ApiResource
      RestApiId: !Ref ApiGateway
      Integration:
        IntegrationHttpMethod: 'POST'
        Type: 'AWS_PROXY'
        Uri: !Sub
          - arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${MyLambdaFunction.Arn}/invocations
          - MyLambdaFunction: !Ref MyLambdaFunction

Outputs:
  ApiUrl:
    Value: !Sub 'https://${ApiGateway}.execute-api.${AWS::Region}.amazonaws.com/prod/resource'
